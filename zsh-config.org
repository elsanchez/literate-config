* Zsh Configuration (Literate)

This is your literate Zsh setup for KDE, Doom Emacs, and powerlevel10k.

---

** Global Environment

#+PROPERTY: header-args :results none
#+begin_src shell :tangle ~/.zshrc
# Instant Prompt loading for faster startup
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Oh My Zsh setup
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Plugins setup
plugins=(git zsh-autosuggestions zsh-syntax-highlighting direnv uv tmux)

# Load Oh My Zsh
source $ZSH/oh-my-zsh.sh

# Load Powerlevel10k configuration if available
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Set environment variables
export EDITOR='emacs'
export BROWSER='firefox'

# Setup PATH for pipx if installed
if command -v pipx > /dev/null 2>&1; then
  export PATH="$PATH:~/.local/bin"
fi

# Setup emacs, npm, nvim environment
export PATH="$PATH:$HOME/.config/emacs/bin/doom:$HOME/.npm-global/bin:/opt/nvim-linux-x86_64/bin"

# Golang environment
export PATH=$PATH:$/usr/local/go/bin
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# Aliases
# Navigation and general
alias ll='ls -lh --color=auto'
alias la='ls -lAh --color=auto'
alias gs='git status'
alias reload!='source ~/.zshrc'
alias please='sudo'
alias cls='clear'

# APT package management (short form)
alias api='sudo apt install'
alias apr='sudo apt remove'
alias app='sudo apt purge'
alias aps='apt search'
alias apu='sudo apt update && sudo apt upgrade'
alias apc='sudo apt autoremove'
alias apf='sudo apt --fix-broken install'
alias apsh='apt show'
alias pbcopy="xsel --clipboard --input"
alias yt='download_video'
alias open='dolphin'
alias via='mosh --ssh="ssh -i ~/.ssh/id_ed25519" linuxuser@107.191.55.XX'
alias restart-audio='systemctl --user restart pipewire pipewire-pulse wireplumber || (pulseaudio -k && pulseaudio --start)'

# General options
setopt correct
setopt autocd
setopt extended_glob

# Completion system
autoload -Uz compinit && compinit

# FZF configuration if installed
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# SSH-Agent with Keychain
if [ -x /usr/bin/keychain ]; then
  eval $(keychain --quiet --eval id_rsa)
fi

# Custom Functions

# Create a directory and move into it
mkcd() {
  mkdir -p "$1" && cd "$1"
}

# Quickly navigate up N directories
up() {
  local d=""
  limit=$1
  for ((i=1; i<=limit; i++)); do
    d="../$d"
  done
  cd "$d"
}

# Open current directory in Dolphin
dolphin() {
  nohup dolphin . >/dev/null 2>&1 &
}

# Open a file quickly with Emacs
e() {
  emacs -nw "$@"
}

download_video() {
  local url=$1
  local output_filename=$2
  local output_dir=~/Downloads/videos
  mkdir -p "$output_dir"

  case "$url" in
    ,*instagram.com*|*deviantart.com*)
        cookies_file=~/Documents/cookies.instagram.txt
        gallery-dl --cookies ${cookies_file} \
                 --output "$output_dir/${output_filename}.%(extension)s" "$url"
      ;;
    ,*x.com*)
        cookies_file=~/Documents/cookies.twitter.txt
      yt-dlp --cookies ${cookies_file} -o "${output_dir}/${output_filename}.%(ext)s" "$url"
      ;;
    ,*)
      yt-dlp -o "${output_dir}/${output_filename}.%(ext)s" "$url"
      ;;
  esac
}

# Lista y selecciona una sesi√≥n tmux con fzf
tms() {
  local session
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --prompt="üîç Tmux session: ")

  if [ -n "$session" ]; then
    tmux attach-session -t "$session"
  else
    echo "‚ùå No session selected."
  fi
}

# Crea o conecta a una sesi√≥n (por nombre o default)
tmgo() {
  local session="${1:-default}"
  tmux has-session -t "$session" 2>/dev/null

  if [ $? != 0 ]; then
    echo "üì¶ Creating session '$session'"
    tmux new-session -s "$session"
  else
    echo "üîÑ Attaching to session '$session'"
    tmux attach-session -t "$session"
  fi
}

# Mata sesi√≥n desde fzf
tmkill() {
  local session
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --prompt="‚ùå Kill session: ")

  if [ -n "$session" ]; then
    tmux kill-session -t "$session"
    echo "üí• Session '$session' killed."
  else
    echo "‚ùå No session selected."
  fi
}

#+end_src

---

** Powerlevel10k configuration

(p10k configuration is generated automatically, no need to tangle)

- File: `~/.p10k.zsh`
- If you need to regenerate it:

#+PROPERTY: header-args :results none
#+begin_src shell
#p10k configure
#+end_src

---

** Notes

- You can add additional sections like Functions, Exports, or Custom Keybindings later.
- `.p10k.zsh` is handled separately to avoid manual conflicts.
- Always reload with:

#+PROPERTY: header-args :results none
#+begin_src shell
source ~/.zshrc
#+end_src

Happy hacking! üöÄ
